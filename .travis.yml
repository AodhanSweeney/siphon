# After changing this file, check it on:
#   http://lint.travis-ci.org/
language: python
sudo: false

addons:
  artifacts:
    target_paths: /
    paths:
      - $(find $WHEELDIR -newer $WHEELDIR/download_marker -name *.whl | tr [:space:] :)
  apt:
    packages: &base_build
    - libhdf5-serial-dev
    - libnetcdf-dev

python:
  - 3.5
  - 2.7

env:
  global:
    - WHEELHOUSE="https://unidata-python.s3.amazonaws.com/wheelhouse/index.html"
    - WHEELDIR="wheelhouse/"
  matrix:
    - NOSE_WITH_COVERAGE=y NOSE_COVER_PACKAGE=siphon
    - TASK="examples"
    - TASK="lint"

matrix:
  include:
    - python: 2.7
      env: TASK="docs"
      addons:
        apt:
          packages:
            - *base_build
            - pandoc
    - python: 3.3
      env:
    - python: 3.4
      env:
    - python: "3.5-dev"
      env: PRE="--pre"
    - python: nightly
      env: PRE="--pre"
  allow_failures:
    - python: "3.5-dev"
    - python: nightly

before_install:
  - if [[ $TASK == "lint" ]]; then
      pip install flake8 pep8-naming;
    else
      pip install --upgrade pip;
      if [[ $TASK == "docs" || $TASK == "examples" ]]; then
        if [[ $TASK == "examples" ]]; then
          export VERSIONS="$VERSIONS -r examples/requirements.txt";
        fi;
        pip install -r docs/requirements.txt;
      fi;
      if [[ $NOSE_WITH_COVERAGE == y ]]; then
        pip install coverage;
      fi;
      mkdir $WHEELDIR;
      pip install ".[test]" -d $WHEELDIR -f $WHEELHOUSE $PRE $VERSIONS;
      touch $WHEELDIR/download_marker;
      travis_wait pip wheel ".[test]" -w $WHEELDIR -f $WHEELHOUSE $PRE $VERSIONS;
      rm -f $WHEELDIR/siphon*.whl;
    fi

install:
  - if [[ $TASK != "lint" ]]; then
      pip install ".[test]" --upgrade --no-index -f file://$PWD/$WHEELDIR $VERSIONS;
      if [[ $TASK == "examples" ]]; then
        python setup.py examples;
      fi;
    fi

script:
  - if [[ $TASK == "lint" ]]; then
      flake8 siphon;
    elif [[ $TASK == "docs" ]]; then
      cd docs;
      make html;
    elif [[ $TASK == "examples" ]]; then
      cd examples;
      echo backend:agg > matplotlibrc;
      MPLBACKEND='agg' python test_examples.py;
    else
      nosetests;
    fi

after_success:
  - if [[ $NOSE_WITH_COVERAGE == y ]]; then
      pip install coveralls;
      coveralls;
    fi
